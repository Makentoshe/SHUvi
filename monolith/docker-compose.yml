version: "3.9"
services:

  postgres:
    container_name: monolith_postgres_container
    # postgres version
    image: postgres:14.2
    # specify some commands for most effective work
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    # postgres environments
    environment:
      POSTGRES_DB: "developmentdp"
      POSTGRES_USER: "developer"
      POSTGRES_PASSWORD: "1243"
      # path to postgresql volumes (usually volume will be placed in the postgresdata folder near this file)
      PGDATA: "/var/lib/postgresql/data/postgresdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    # ports for connection to the postgres
    ports:
      - "5432:5432"
    # performs a container health check and if something goes wrong - restart it
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U developer -d developerdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      # limit docker resources
      resources:
        limits:
          cpus: '1'
          memory: 1G
    # add to postgres network
    networks:
      - postgres

  pgadmin:
    container_name: monolith_pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "mkliverout@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "1243"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

networks:
  postgres:
    driver: bridge